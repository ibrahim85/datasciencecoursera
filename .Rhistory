X[(which(X$var1 <= 3 & X$var3 > 11)),]
X[(X$var1 <= 3 | X$var3 > 15)]
X[(X$var2>2)]
X[X$var2 > 2,]
X$var2
X$var2>2
X[(X$var2 > 2),]
X
X[(X$var2 >6 2),]
X[(X$var2 >6),]
X[(X$var2 > 6),]
X$var1[(X$var2 > 6),]
X$var1[(X$var2 > 6)]
X[,(X$var2 > 6)]
X[X$var2 > 6,]
X[which(X$var2 > 6),]
?which
which(X$var2>6)
X$var2>6
X
order(X$var1)
order(X$var2)
order(X$var3)
?order
X[c(2,3,4)]
X[c(2,3,4),]
X[c(3,2,4),]
X[order(X$var1),]
X[order(X$var2),]
X[order(X$var3),]
order(X$var1)
order(X$var1,X$var2)
order(X$var1,X$var3)
order(X$var3,X$var1)
order(X$var1,c(1,2,3))
order(X$var1,c(1,2,3,4,5))
order(c(1,2,3,4,5))
order(c(1,2,2,2,5))
order(c(1,2,2,2,5),X$var1)
order(c(3,2,4,2,5),X$var1)
order(c(3,2,4,2,5))
?desc
week2
mean(week2)
mean(week2$Off.Diff)
nflFrame
temp
summary(temp)
str(temp)
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","datasciencecoursera/quiz.csv",method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","quiz.csv",method = "curl")
ACS <- read.csv("quiz.csv")
ACS$ACR>10
ACS$ACR==3
ACS[ACS$ACR>10]
ACS[ACS$ACR>10,]
ACS[which(ACS$ACR>10),]
ACS[ACS$ACR>10]
ACS[ACS$ACR>10,1]
ACS[1,ACS$ACR>10]
ACS$ACR>10
ACS[1:2,]
ACS[c(TRUE,FALSE),]
ACS$ACR==3
ACS[ACS$ACR==3,1]
ACS[ACS$ACR==3,]
ACS[which(ACS$ACR==3),]
hist(week2$DAVE.Diff)
ACS
ACS$ACR==3
which(ACS$ACR==3)
ACS[1]
ACS[,1]
ACS[1,]
ACS[1:2,]
which(ACS$ACR==3)
ACS[which(ACS$ACR==3),]
which((ACS$ACR==3)&ACS$AGS==6))
which((ACS$ACR==3)&(ACS$AGS==6))
which((ACS$AGS==6))
which((ACS$ACR==3)&(ACS$AGS==6))
ACS$SERIALNO[which((ACS$ACR==3)&(ACS$AGS==6)),]
ACS$SERIALNO[which((ACS$ACR==3)&(ACS$AGS==6))]
week2
library(dplyr)
install.packages("dplyr")
library(dplyr)
chicago <- readRDS("chicago.rds")
week2
names(week2)
select(week2,Spread.Winner:Def.Diff)
select(week2,-(DAVE.Diff))
filter(week2,DAVE.Diff>0)
filter(week2,DAVE.Diff<0)
filter(week2,DAVE.Diff>0&Def.Diff>0)
filter(week2,(DAVE.Diff>0)&(Def.Diff>0)
)
arrange(week2,desc(Total.Diff))
mutate(week2,test=DAVE.Diff-Off.DIff)
mutate(week2,test=DAVE.Diff-Off.Diff)
mutate(week2,test=DAVE.Diff-mean(DAVE.Diff))
week
week2
mutate(week2,positiveDAVE=facotr(1*(DAVE.Diff>0)))
mutate(week2,positiveDAVE=factor(1*(DAVE.Diff>0)))
?factor
mutate(week2,positiveDAVE=factor(1*(DAVE.Diff>0),labels=c("positive","negative")))
mutate(week2,positiveDAVE=factor(1*(DAVE.Diff),labels=c("positive","negative")))
mutate(week2,positiveDAVE=factor(1*(DAVE.Diff>0)))
groupby(week2,positiveDAVE)
group_by(week2,positiveDAVE)
group_by(mutate(week2,positiveDAVE=factor(1*(DAVE.Diff>0))),,positiveDAVE)
group_by(mutate(week2,positiveDAVE=factor(1*(DAVE.Diff>0))),positiveDAVE)
mutated <-  mutate(week2,positiveDAVE=factor(1*(DAVE.Diff>0)))
mutated
group_by(mutated,positiveDAVE)
?group_by
libray(jpeg)
library(jpeg)
install.packages("jpeg")
library(jpeg)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native = TRUE)
?readJPEG
readJPEG("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native = TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native = TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native = FALSE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
z <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",z,mode = "wb")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",z,mode = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",z,mode = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",z,mode = "curl")
file.remove(z)
z <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",z,mode = "curl")
file.remove(z)
z <- tempfile()
file.remove(z)
z
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",z,mode = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","test.jpg",mode = "curl")
getwd()
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","test.jpg",mode = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",mode = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","test.txt",mode = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","test.txt",mode = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","test.txt",mode = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","test.csv",mode = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","test.csv",method =  = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","test.csv",method = "curl")
file.remove(test.csv)
file.remove("test.csv")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","test.txt",method = "curl")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","test.jpg",method = "curl")
readJPEG("test.jpg",native = TRUE)
quantile(readJPEG("test.jpg",native = TRUE))
?quantile
quantile(readJPEG("test.jpg",native = TRUE),probs = c(.3,.8))
file.remove("test.jpg")
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",method="curl")
gdp <- read.csv(url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"))
gdp <- read.csv(url("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"))
gdp
gdp <- read.csv("getdata-data-GDP.csv")
gdp
edu <- read.csv("getdata-data-EDSTATS_Country.csv")
edu
?merge
gdp
edu
names(edu)
edu$CountryCode
names(gdp)
gdp$X
merge(gdp,edu,by.x = X, by.y = CountryCode)
merge(gdp,edu,by.x = "X", by.y = "CountryCode")
merged <- merge(gdp,edu,by.x = "X", by.y = "CountryCode")
merged
names(merged)
merged
head(merged)
head(arrage(merged,desc("Gross.domestic.product.2012")),20)
?arrange
head(arrange(merged,desc("Gross.domestic.product.2012")),20)
head(arrange(merged,desc("Gross.domestic.product.2012")))
arrange(merged,desc("Gross.domestic.product.2012"))
arrange(merged,desc(Gross.domestic.product.2012))
head(arrange(merged,desc(Gross.domestic.product.2012)),20)
head(arrange(merged,desc(X.3)),20)
merged
merged$X
merged <- merge(gdp,edu,by.x = "X", by.y = "CountryCode",all = FALSE)
merged$X
merged$CountryCode
?merge
gdp$X
edu$CountryCode
intersect(edu$CountryCode,gdp$X)
length(intersect(edu$CountryCode,gdp$X))
gdp$Gross.domestic.product.2012
gdp$X[gdp$Gross.domestic.product.2012>0]
gdp$Gross.domestic.product.2012
?read.csv
gdp <- read.csv(url("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"),stringsAsFactors = FALSE)
gdp
gdp$Gross.domestic.product.2012
edu <- read.csv(url("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"),stringsAsFactors = FALSE)
edu$CountryCode
gdp$X
gdp$Gross.domestic.product.2012>0
gdp$X[gdp$Gross.domestic.product.2012>0]
intersect(gdp$X[gdp$Gross.domestic.product.2012>0],edu$CountryCode)
length(intersect(gdp$X[gdp$Gross.domestic.product.2012>0],edu$CountryCode))
gdp[gdp$Gross.domestic.product.2012>0,]
merge(gdp[gdp$Gross.domestic.product.2012>0,],edu,by.x = X,by.y = CountryCode,all = FALSE)
merge(gdp[gdp$Gross.domestic.product.2012>0,],edu,by.x = "X",by.y = "CountryCode",all = FALSE)
merged <- merge(gdp[gdp$Gross.domestic.product.2012>0,],edu,by.x = "X",by.y = "CountryCode",all = FALSE)
head(merged)
head(merged$X)
arranged <- arrange(merged,desc(Gross.domestic.product.2012))
head(arranged,20)
merged$Gross.domestic.product.2012
?select
select(merged,c("X"))
select(merged,c(X))
select(merged,c(X,Gross.domestic.product.2012))
class(merged$X)
class(merged$X) <- "numeric"
select(merged,c(X,Gross.domestic.product.2012))
class(merged$X) <- "character"
select(merged,c(X,Gross.domestic.product.2012))
merged <- merge(gdp[gdp$Gross.domestic.product.2012>0,],edu,by.x = "X",by.y = "CountryCode",all = FALSE)
select(merged,c(X,Gross.domestic.product.2012))
class(merged$Gross.domestic.product.2012) <- "numeric"
select(merged,c(X,Gross.domestic.product.2012))
arrange(select(merged,c(X,Gross.domestic.product.2012)),desc(Gross.domestic.product.2012))
arrange(select(merged,c(X,Gross.domestic.product.2012,X.1)),desc(Gross.domestic.product.2012))
merged$Long.Name
arrange(select(merged,c(X,Long.NameGross.domestic.product.2012)),desc(Gross.domestic.product.2012))
arrange(select(merged,c(X,Long.Name,Gross.domestic.product.2012)),desc(Gross.domestic.product.2012))
merged
merged$Source.of.most.recent.Income.and.expenditure.data
merged$Income.Group
arrange(select(merged,c(X,Income.Group,Gross.domestic.product.2012)),desc(Gross.domestic.product.2012))
arranged <- arrange(select(merged,c(X,Income.Group,Gross.domestic.product.2012)),desc(Gross.domestic.product.2012))
arranged
group_by(arranged,Income.Group)
?tapply
tapply(arranged,Income.Group,mean)
tapply(arranged,"Income.Group",mean)
tapply(arranged$Gross.domestic.product.2012,arranged$Income.Group,mean)
?mutate
?cut
quantile(arranged$Gross.domestic.product.2012,c(.2,.4,.6,.8))
quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8))
cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(.2,.4,.6,.8)))
cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)))
cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)),labels = c("1st","2nd","3rd","4th","5th"))
mutated <- mutate(arranged,cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)),labels = c("1st","2nd","3rd","4th","5th"))
)
mutats
mutated
mutated <- mutate(arranged,cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)),labels = c("1st","2nd","3rd","4th","5th")))
cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)),labels = c("1st","2nd","3rd","4th","5th"))
cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)),labels = c("1st","2nd","3rd","4th","5th"),include.lowest = TRUE)
mutated <- mutate(arranged,cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)),labels = c("1st","2nd","3rd","4th","5th"),include.lowest = TRUE))
mutated
?select
select(mutated,Income.Group="Lower middle income")
select(mutated,matches("Lower Middle Income"))
mutated[mutated$Income.Group in c("Lower Middle Income"),]
mutated[mutated$Income.Group %in% c("Lower Middle Income"),]
mutated$Income.Group %in% c("Lower Middle Income")
mutated$Income.Group %in% c("Lower middle income")
mutated[mutated$Income.Group %in% c("Lower middle income"),]
38*5
names(mutated)
rename(mutated, `cut(arranged$Gross.domestic.product.2...`=Quintiles)
rename(mutated, `cut(arranged$Gross.domestic.product.2...`="Quintiles"")
)
""
rename(mutated, `cut(arranged$Gross.domestic.product.2...`="Quintiles")
rename(mutated, cut(arranged$Gross.domestic.product.2...="Quintiles")
rename(mutated, cut(arranged$Gross.domestic.product.2="Quintiles")
rename(mutated, cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)),labels = c("1st","2nd","3rd","4th","5th"),include.lowest = TRUE)="Quintiles")
rename(mutated, "cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)),labels = c("1st","2nd","3rd","4th","5th"),include.lowest = TRUE)"="Quintiles")
names(mutated)
names(mutated)[4]
names(mutated)[4] <- "Quintiles"
names(mutated)
mutated
mutated$Quintiles="1st"
@#@
mutated$Quintiles=="1st"
mutated$Quintiles=="2nd"
mutated
mutated <- mutate(arranged,cut(arranged$Gross.domestic.product.2012,breaks=quantile(arranged$Gross.domestic.product.2012,c(0,.2,.4,.6,.8,1)),labels = c("1st","2nd","3rd","4th","5th"),include.lowest = TRUE))
mutated
names(mutated)[4] <- "Quintiles"
mutated
mutated$Quintiles=="1st"
length(mutated$Quintiles=="1st")
?count
mutated[mutated$Quintiles=="1st",]
length(mutated[mutated$Quintiles=="1st",])
numrows(mutated[mutated$Quintiles=="1st",])
rowcount
?rowcount
nrow(mutated[mutated$Quintiles=="1st"],)
nrow(mutated[mutated$Quintiles=="1st",])
nrow(mutated[mutated$Quintiles=="2nd",])
nrow(mutated[mutated$Quintiles=="3rd",])
nrow(mutated[mutated$Quintiles=="4th",])
nrow(mutated[mutated$Quintiles=="5th",])
38+38+37+38+38
mutated[mutated$Quintiles=="1st",]
mutated[(mutated$Income.Group=="Lower middle income")(mutated$Quintiles=="1st"),]
mutated[(mutated$Income.Group=="Lower middle income")&(mutated$Quintiles=="1st"),]
week2
probit
probit <- glm(Spread.Winner ~ Def.Diff, family=binomial(link="probit"),data=week2)
summary(probit)
nflWeeks <- read.csv("NFL/Data/2015AllWeeks.csv")
nflWeeks
week2 <- select(nflWeeks,Winner:TotalDiff)
week2
week2 <- nflWeeks[nflWeeks$Week==2,]
week2
week2 <- select(week2,Winner:TotalDiff)
week2
probit <- glm(Winner ~ HDAVE+VDAVE+HOff+VOff+HDef+VDef+HTotal+VTotal, family=binomial(link="probit"),data=week2)
probit <- glm(Winner ~ HDAVE + VDAVE + HOff + VOff + HDef + VDef + HTotal + VTotal, family=binomial(link="probit"),data=week2)
probit <- glm(Winner ~ HDAVE + VDAVE + HOff + VOff + HDef + VDef, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDAVE + VDAVE + HDef, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef, family=binomial(link="probit"),data=week2)
summary(probit)
confint(probit)
?confint
confint(probit,level = .9)
confint(probit,level = .8)
confint(probit,level = .75)
confint(probit,level = .79)
confint(probit,level = .799)
confint(probit,level = .795)
confint(probit,level = .8)
probit <- glm(Winner ~ HDef - VDef, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + VDef, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HTotal, family=binomial(link="probit"),data=week2)
summary(probit)
confint(probit)
corr(week2$Winner,week2$HDef)
cor(week2$Winner,week2$HDef)
cor(week2$Winner,week2$HTotal)
probit <- glm(Winner ~ HDef + HOff, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HOff+HTotal, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HTotal, family=binomial(link="probit"),data=week2)
summary(probit)
confint(probit)
probit <- glm(Winner ~ HDef + HTotal+ VDef, family=binomial(link="probit"),data=week2)
summary*probit
summary(probit)
probit <- glm(Winner ~ HDef + HTotal+ VOff, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HTotal+ VTotalf, family=binomial(link="probit"),data=week2)
probit <- glm(Winner ~ HDef + HTotal+ VTotal, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HTotal+ VDAVE, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HTotal+ DAVEDiff, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HTotal+ DefDiff, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HTotal+ OffDiff, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HTotal+ TotalDiff, family=binomial(link="probit"),data=week2)
summary(probit)
probit <- glm(Winner ~ HDef + HTotal+ VDAVE, family=binomial(link="probit"),data=week2)
probit <- glm(Winner ~ HDef + HTotal+ TotalDiff, family=binomial(link="probit"),data=week2)
probit <- glm(Winner ~ HDef + HTotal+ VDAVE, family=binomial(link="probit"),data=week2)
summary(probit)
confint(probit)
probit <- glm(Winner ~ HDef + HTotal, family=binomial(link="probit"),data=week2)
summary(probit)
getwd()
weeksFrame <- read.csv("NFL/Data/2015AllWeeks.csv")
weeksFrame
weeksFrame[weeksFrame$week=2,]
weeksFrame[weeksFrame$week==2,]
weeksFrame[weeksFrame$Week==2,]
?select()
source('~/datasciencecoursera/NFL/Code/GetWeekX.R')
source("GetWeekX.R")
source('~/datasciencecoursera/NFL/Code/GetWeekX.R')
getWeek(2)
weekXClean
getWeek(2)
test <- getWeek(2)
test
source('~/datasciencecoursera/NFL/Code/GetWeekX.R')
probit <- getWeekProbit(2,"Winner ~ HDef + HTotal")
probit
summary(probit)
names(week2)
names(weekXClean)
weeksFrame <- read.csv("NFL/Data/2015AllWeeks.csv")
weekX <- weeksFrame[weeksFrame$Week==week,]
weekXClean <- select(weekX,Winner:X14VTotal)
week <- 2
weeksFrame <- read.csv("NFL/Data/2015AllWeeks.csv")
weekX <- weeksFrame[weeksFrame$Week==week,]
weekXClean <- select(weekX,Winner:X14VTotal)
names(weekXClean)
source('~/datasciencecoursera/NFL/Code/GetWeekX.R')
getWeekProbit("Winner ~ HDef + HTotal")
summary(probit)
probit <- getWeekProbit("Winner ~ X14HPyth")
summary(probit)
getWeekProbit("Winner ~ HDef + HTotal")
probit
getWeekProbit("Winner ~ HDef + HTotal")
probit
source('~/datasciencecoursera/NFL/Code/GetWeekX.R')
getWeekProbit("Winner ~ HDef + HTotal")
probit
source('~/datasciencecoursera/NFL/Code/GetWeekX.R')
getWeekProbit("Winner ~ HDef + HTotal")
getWeekProbit("Winner ~ X14HPyth")
getWeekProbit("Winner ~ X14HEst")
names(weekXClean)
getWeekProbit("Winner ~ X14HEst+X14VEst")
getWeekProbit("Winner ~ X14HPyth+X14VPyth")
names(weekXClean)
getWeekProbit("Winner ~ X14HTotal+X14VTotal")
getWeekProbit("Winner ~ X14HTotal")
getWeekProbit("Winner ~ X14HTotal+X14HEst")
getWeekProbit("Winner ~ X14HTotal+X14HPyth")
getWeekProbit("Winner ~ X14HTotal+X14VPyth")
getWeekProbit("Winner ~ X14HTotal+X14VTotal")
getWeekProbit("Winner ~ X14HOff+X14VOff")
getWeekProbit("Winner ~ X14HDef+X14VDef")
getWeekProbit("Winner ~ X14HOff+X14VDef")
getWeekProbit("Winner ~ X14HTotal+X14VDef")
getWeekProbit("Winner ~ X14HTotal+X14VTotl")
getWeekProbit("Winner ~ X14HTotal+X14VTotal")
getWeekProbit("Winner ~ X14HTotal+X14VTDef")
getWeekProbit("Winner ~ X14HTotal+X14VDef")
getWeekProbit("Winner ~ X14HOff+X14VDef")
getWeekProbit("Winner ~ X14HTotal+X14VDef")
getWeekProbit("Winner ~ X14HTotal+X14VDef+HDef")
getWeekProbit("Winner ~ X14HTotal+X14VDef+HDef+HTotal")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal")
names(weekXClean)
getWeekProbit("Winner ~ X14VDef+HDef+HTotal")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+VDAVE")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+HDAVE")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14HTotal")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14HDef")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14HOff")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14VOff")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14VTotal")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14VEst")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14VPyth")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14HPyth")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14HEst")
names(weekXClean)
getWeekProbit("Winner ~ X14VDef+HDef+HTotal")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal+X14VTotal")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal")
confint(probit)
getWeekProbit("Winner ~ X14VDef+HDef+HTotal")
?glm
getWeekProbit("Winner ~ VDAVE+HDef+HTotal")
glm("Winner ~ VDAVE+HDef+HTotal", family=binomial(link="probit"),data=weekXClean,intercept=FALSE)
glm("Winner ~ VDAVE+HDef+HTotal", family=binomial(link="probit"),data=weekXClean)
getWeekProbit("Winner ~ VDAVE+HDef+HTotal")
getWeekProbit("Winner ~ X14VDef+HDef+HTotal")
test  <- rexp(1000,.2)
test
test  <- rexp(1000,.2)
test  <- rexp(40,.2)
test
hist(test)
?runif
hist(runif(1000))
for(i in 1:1000) mns = c(mns,mean(runif(40)))
mns = NULL
for(i in 1:1000) mns = c(mns,mean(runif(40)))
hist(mns)
mns = NULL
for(i in 1:1000) mns = c(mns,mean(rexp(40,.2)))
mns
hist(mns)
expMean <- NULL
for(i in 1:1000) expMean = c(expMean,mean(rexp(40,.2)))
expVar <- NULL
?var
for(i in 1:1000) expMean = c(expMean,var(rexp(40,.2)))
expMean <- NULL
for(i in 1:1000) expMean = c(expMean,mean(rexp(40,.2)))
for(i in 1:1000) expVar = c(expVar,var(rexp(40,.2)))
hist(expMean)
hist(expVar)
